
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;

import filterclasses.*;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 91987
 */
public class addpost extends javax.swing.JFrame {

    String username;
    String date;
    String time;
    JFileChooser chooser;
    File j;
    String mpid;
    BufferedImage img;
    File filterfile;
    Image changedimg;

    public addpost() {
        chooser = new JFileChooser();
        initComponents();
       setSize(1100, 900);
        filterfile = new File("src/pic.jpg");
        //setExtendedState(addpost.MAXIMIZED_BOTH);

        getdatetime();
    }

    public addpost(String homeusername) {
        chooser = new JFileChooser();
        initComponents();
        setSize(1100, 900);
        
        username = homeusername;
        filterfile = new File("src/pic.jpg");

        getdatetime();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        captionlb = new javax.swing.JLabel();
        captiontf = new javax.swing.JTextField();
        postphotolb = new javax.swing.JLabel();
        choosebtn = new javax.swing.JButton();
        postedphotolb = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        captionlb.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        captionlb.setText("Caption");
        getContentPane().add(captionlb);
        captionlb.setBounds(30, 20, 190, 40);
        getContentPane().add(captiontf);
        captiontf.setBounds(250, 10, 350, 60);

        postphotolb.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        postphotolb.setText("PostPhoto");
        getContentPane().add(postphotolb);
        postphotolb.setBounds(14, 74, 90, 50);

        choosebtn.setBackground(new java.awt.Color(123, 156, 179));
        choosebtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        choosebtn.setText("CHOOSE");
        choosebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosebtnActionPerformed(evt);
            }
        });
        getContentPane().add(choosebtn);
        choosebtn.setBounds(130, 80, 130, 40);

        postedphotolb.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        getContentPane().add(postedphotolb);
        postedphotolb.setBounds(10, 140, 670, 610);

        addbtn.setBackground(new java.awt.Color(123, 156, 179));
        addbtn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        addbtn.setText("ADD");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        getContentPane().add(addbtn);
        addbtn.setBounds(690, 760, 140, 70);

        jPanel1.setBackground(new java.awt.Color(123, 156, 179));
        jPanel1.setLayout(null);

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Walden");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(30, 320, 160, 30);

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Blur");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(30, 40, 160, 30);

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setText("Brighter");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(30, 80, 160, 30);

        jButton6.setBackground(new java.awt.Color(153, 153, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setText("Darker");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(30, 120, 160, 30);

        jButton7.setBackground(new java.awt.Color(153, 153, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setText("Grayscale");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(30, 160, 160, 30);

        jButton8.setBackground(new java.awt.Color(153, 153, 255));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton8.setText("Hefe");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(30, 200, 160, 30);

        jButton9.setBackground(new java.awt.Color(153, 153, 255));
        jButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton9.setText("Lofi");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(30, 240, 160, 30);

        jButton10.setBackground(new java.awt.Color(153, 153, 255));
        jButton10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton10.setText("Nashville");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(30, 280, 160, 30);

        jButton11.setBackground(new java.awt.Color(153, 153, 255));
        jButton11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton11.setText("No Filter");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11);
        jButton11.setBounds(30, 360, 160, 30);

        jLabel1.setBackground(new java.awt.Color(153, 153, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Apply Filters");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 14, 160, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(690, 220, 230, 450);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/srcok/aaron-burden-Bpe_qXKhI0w-unsplash.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 4028, 2990);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void choosebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosebtnActionPerformed

        int k = chooser.showOpenDialog(this);
        if (k == JFileChooser.APPROVE_OPTION) {
            j = chooser.getSelectedFile();
            setnofilter();

            
        }
    }//GEN-LAST:event_choosebtnActionPerformed
    public void setnofilter() {
        try {
            j = chooser.getSelectedFile();
            img = ImageIO.read(j.getAbsoluteFile());
            Image img3 = img.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);
            postedphotolb.setIcon(new ImageIcon(img3));

        } catch (Exception e) {
            e.printStackTrace();

        }
    }
    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed

        try {
            String title = captiontf.getText();

            if (title.equals("") || username.equals("") || date.equals("") || time.equals("")) {
                JOptionPane.showMessageDialog(this, "plz fill fields");

            } else if (j == null) {

                JOptionPane.showMessageDialog(this, "Please choose file");

            } else {

                HttpResponse<String> res = Unirest.post("http://localhost:8999/addpost")
                        .queryString("title", title)
                        .queryString("username", username)
                        .queryString("date", date)
                        .queryString("time", time)
                        .field("photo", j)
                        .asString();

                if (res.getStatus() == 200) {
                    String udata = res.getBody();
                    System.out.println(udata);

                    StringTokenizer st1 = new StringTokenizer(udata, ";#");
                    while (st1.hasMoreTokens()) {

                        mpid = st1.nextToken();
                        String ans = st1.nextToken();

                        if (ans.equals("success")) {

                            JOptionPane.showMessageDialog(this, "POST ADDED");
                            /* addstorypics as = new addstorypics(mpid);
                            as.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                            as.setVisible(true);
                            dispose();*/
                        } else {
                            JOptionPane.showMessageDialog(this, "error");
                        }
                    }
                    addstorypics as = new addstorypics(mpid);
                    as.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                    as.setVisible(true);
                    dispose();

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_addbtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    WaldenFilter obj = new WaldenFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    BlurFilter obj = new BlurFilter();
                    BufferedImage blurimg = obj.filter(img);

                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }

                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    BrighterFilter obj = new BrighterFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    DarkerFilter obj = new DarkerFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    GrayscaleFilter obj = new GrayscaleFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));;

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    HefeFilter obj = new HefeFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    LoFiFilter obj = new LoFiFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    NashvilleFilter obj = new NashvilleFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        j = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(postedphotolb.getWidth(), postedphotolb.getHeight(), Image.SCALE_SMOOTH);

                    postedphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        setnofilter();
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addpost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addpost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addpost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addpost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addpost().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JLabel captionlb;
    private javax.swing.JTextField captiontf;
    private javax.swing.JButton choosebtn;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel postedphotolb;
    private javax.swing.JLabel postphotolb;
    // End of variables declaration//GEN-END:variables

    public void getdatetime() {
        DateTimeFormatter dt = DateTimeFormatter.ofPattern("dd MMMM yyyy");
        DateTimeFormatter tm = DateTimeFormatter.ofPattern("hh:mm:ss a");
        LocalDateTime now = LocalDateTime.now();
        date = dt.format(now);
        time = tm.format(now);

    }
}
