
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

import javax.swing.JOptionPane;

public class userhome extends javax.swing.JFrame {

    String homeusername;

    public userhome(String username) {
        initComponents();
        setSize(1200, 1000);
        homeusername = username;
        getwallposts();
        // getcomments();

    }

    public userhome() {
        initComponents();
        setSize(1200, 1000);
        getwallposts();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cupsswrd = new javax.swing.JButton();
        followingbtn = new javax.swing.JButton();
        followerbtn = new javax.swing.JButton();
        addpostbtn = new javax.swing.JButton();
        gotosearchbtn = new javax.swing.JButton();
        msrolpane = new javax.swing.JScrollPane();
        showwallpanel2 = new javax.swing.JPanel();
        logoutbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        cupsswrd.setBackground(new java.awt.Color(123, 156, 179));
        cupsswrd.setText("change password");
        cupsswrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cupsswrdActionPerformed(evt);
            }
        });
        getContentPane().add(cupsswrd);
        cupsswrd.setBounds(810, 860, 153, 40);

        followingbtn.setBackground(new java.awt.Color(123, 156, 179));
        followingbtn.setText("following");
        followingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followingbtnActionPerformed(evt);
            }
        });
        getContentPane().add(followingbtn);
        followingbtn.setBounds(40, 860, 170, 40);

        followerbtn.setBackground(new java.awt.Color(123, 156, 179));
        followerbtn.setText("followers");
        followerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followerbtnActionPerformed(evt);
            }
        });
        getContentPane().add(followerbtn);
        followerbtn.setBounds(230, 860, 170, 40);

        addpostbtn.setBackground(new java.awt.Color(123, 156, 179));
        addpostbtn.setFont(new java.awt.Font("Snap ITC", 1, 18)); // NOI18N
        addpostbtn.setText("<>ADD POST");
        addpostbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addpostbtnActionPerformed(evt);
            }
        });
        getContentPane().add(addpostbtn);
        addpostbtn.setBounds(980, 860, 180, 40);

        gotosearchbtn.setBackground(new java.awt.Color(123, 156, 179));
        gotosearchbtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        gotosearchbtn.setText("GOTOSEARCH");
        gotosearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotosearchbtnActionPerformed(evt);
            }
        });
        getContentPane().add(gotosearchbtn);
        gotosearchbtn.setBounds(1010, 0, 130, 50);

        showwallpanel2.setBackground(new java.awt.Color(51, 51, 51));
        showwallpanel2.setLayout(null);
        msrolpane.setViewportView(showwallpanel2);

        getContentPane().add(msrolpane);
        msrolpane.setBounds(12, 62, 1140, 790);

        logoutbtn.setBackground(new java.awt.Color(255, 0, 0));
        logoutbtn.setText("LOGOUT");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });
        getContentPane().add(logoutbtn);
        logoutbtn.setBounds(1030, 910, 110, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/srcok/Free-Desktop-Light-Blue-Wallpaper-HD34.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 1958, 1200);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cupsswrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cupsswrdActionPerformed

        userchangepassword uchnpsswrd = new userchangepassword(homeusername);
        uchnpsswrd.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        uchnpsswrd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cupsswrdActionPerformed

    private void followerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followerbtnActionPerformed
        followers fwr = new followers(homeusername);
        fwr.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        fwr.setVisible(true);
        

    }//GEN-LAST:event_followerbtnActionPerformed

    private void followingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followingbtnActionPerformed
        followings flg = new followings(homeusername);
        flg.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        flg.setVisible(true);
        

    }//GEN-LAST:event_followingbtnActionPerformed

    private void addpostbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addpostbtnActionPerformed
        addpost ad = new addpost(homeusername);
        ad.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        ad.setVisible(true);
        

    }//GEN-LAST:event_addpostbtnActionPerformed

    private void gotosearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotosearchbtnActionPerformed
        newsearch ad = new newsearch(homeusername);
        ad.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        ad.setVisible(true);
        
    }//GEN-LAST:event_gotosearchbtnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to logout?", "Confirmation Dialog", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            this.dispose();
            infernouserlogin ik = new infernouserlogin();
            ik.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ik.setVisible(true);

        }
    }//GEN-LAST:event_logoutbtnActionPerformed

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userhome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addpostbtn;
    private javax.swing.JButton cupsswrd;
    private javax.swing.JButton followerbtn;
    private javax.swing.JButton followingbtn;
    private javax.swing.JButton gotosearchbtn;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JScrollPane msrolpane;
    private javax.swing.JPanel showwallpanel2;
    // End of variables declaration//GEN-END:variables

    public void getwallposts() {
        try {
            showwallpanel2.removeAll();
            HttpResponse<String> res = Unirest.get("http://localhost:8999/getwallposts")
                    .queryString("homeusername", homeusername)
                    .asString();
            if (res.getStatus() == 200) {

                System.out.println(res.getBody());
                String walldata = res.getBody();
                StringTokenizer st = new StringTokenizer(walldata, "&");
                int y = 10;
                int mainheight = 630;
                while (st.hasMoreTokens()) {
                    String data = st.nextToken();
                    StringTokenizer st1 = new StringTokenizer(data, ";#");
                    String pid = st1.nextToken();
                    String caption = st1.nextToken();
                    String postphoto = st1.nextToken();
                    String ftusername = st1.nextToken();
                    String date = st1.nextToken();
                    String time = st1.nextToken();
                    String ans = st1.nextToken();
                    String ftphoto = st1.nextToken();
                    String Count = st1.nextToken();
                    showwallpanel fp = new showwallpanel();
                    fp.setBounds(10, y, 1100, 630);
                    showwallpanel2.add(fp);
                    fp.followedtonamelb.setText(ftusername);
                    fp.wallcaptionlb.setText(caption);
                    fp.datelb.setText(date);
                    fp.likecountlb.setText(Count);
                    URL url = new URL("http://localhost:8999/GetResource/" + postphoto);
                    BufferedImage bimg = ImageIO.read(url);
                    Image img = bimg.getScaledInstance(fp.showwallphotolb.getWidth(), fp.showwallphotolb.getHeight(), Image.SCALE_SMOOTH);
                    fp.showwallphotolb.setIcon(new ImageIcon(img));

                    URL url1 = new URL("http://localhost:8999/GetResource/" + ftphoto);
                    BufferedImage bimg1 = ImageIO.read(url1);
                    Image img1 = bimg1.getScaledInstance(fp.followedtolb.getWidth(), fp.followedtolb.getHeight(), Image.SCALE_SMOOTH);
                    fp.followedtolb.setIcon(new ImageIcon(img1));

                    //fp.commentpanel.add()
                    if (ans.equals("yes")) {
                        fp.likebtn.setText("unlike");

                    } else {
                        fp.likebtn.setText("like");

                    }

                    fp.likebtn.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent ae) {
                            new Thread() {
                                public void run() {
                                    try {
                                HttpResponse<String> res = Unirest.get("http://localhost:8999/getlike")
                                        .queryString("homeusername", homeusername)
                                        .queryString("pid", pid)
                                        .asString();
                                if (res.getStatus() == 200) {
                                    //System.out.println(res.getBody());
                                    if (res.getBody().contentEquals("success")) {

                                        fp.likebtn.setText("unlike");
                                        getwallposts();

                                    } else {
                                        fp.likebtn.setText("like");
                                        getwallposts();
                                    }

                                }

                            } catch (Exception e) {
                                e.printStackTrace();

                            }


                                }
                            }.start();
                            
                        }
                    });
                    fp.commentbtn.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent ae) {
                            String comment = fp.commenttf.getText();
                            if (comment.equals("")) {
                                JOptionPane.showMessageDialog(fp, "Please enter values");
                            } else {
                                try {
                                    HttpResponse<String> res = Unirest.get("http://localhost:8999/sndcomments")
                                            .queryString("homeusername", homeusername)
                                            .queryString("pid", pid)
                                            .queryString("comment", comment)
                                            .asString();
                                    if (res.getStatus() == 200) {
                                        // System.out.println(res.getBody());
                                        if (res.getBody().contentEquals("success")) {

                                            JOptionPane.showMessageDialog(fp, "comment done");

                                            getwallposts();
                                        }

                                    }

                                } catch (Exception e) {
                                    e.printStackTrace();

                                }

                            }
                        }
                    });
                    fp.showwallphotolb.addMouseListener(new MouseAdapter() {
                        public void mouseClicked(MouseEvent me) {
                            StoriesUnderPosts2 sasp = new StoriesUnderPosts2(pid);
                            sasp.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                            // sasp.setVisible(true);

                        }

                    });

                    y += 640;
                    mainheight += 640;
                    HttpResponse<String> res1 = Unirest.get("http://localhost:8999/getcomments")
                            .queryString("pid", pid)
                            .asString();
                    if (res1.getStatus() == 200) {
                        //System.out.println(res1.getBody());
                        String cdata = res1.getBody();
                        StringTokenizer st5 = new StringTokenizer(cdata, "&");
                        int k = 4;
                        int mainheightf = 250;
                        while (st5.hasMoreTokens()) {
                            String odata = st5.nextToken();
                            StringTokenizer st8 = new StringTokenizer(odata, ";#");
                            String comments = st8.nextToken();
                            String by = st8.nextToken();
                            showcomments sc = new showcomments();
                            sc.setBounds(10, k, 210, 250);
                            fp.commentpanel.add(sc);
                            sc.commentlb.setText(comments);
                            sc.bylb.setText(by);
                            k += 255;
                            mainheightf += 255;

                        }
                        fp.commentpanel.repaint();
                        fp.commentpanel.setPreferredSize(new Dimension(fp.kscrolpane.getWidth(), mainheight));

                    }

                }
                showwallpanel2.repaint();
                showwallpanel2.setPreferredSize(new Dimension(msrolpane.getWidth(), mainheight));

            }

        } catch (Exception e) {
            e.printStackTrace();

        }

    }
    

}
