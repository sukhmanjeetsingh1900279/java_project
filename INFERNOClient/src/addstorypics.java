
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import filterclasses.BlurFilter;
import filterclasses.BrighterFilter;
import filterclasses.DarkerFilter;
import filterclasses.GrayscaleFilter;
import filterclasses.HefeFilter;
import filterclasses.LoFiFilter;
import filterclasses.NashvilleFilter;
import filterclasses.WaldenFilter;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.URL;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 91987
 */
public class addstorypics extends javax.swing.JFrame {

    /**
     * Creates new form addstorypics
     */
    String pid;

    JFileChooser chooser;
    File x;
      BufferedImage img;
    File filterfile;
    Image changedimg;

    public addstorypics() {
        chooser = new JFileChooser();
        initComponents();
        setSize(1500, 1000);
           filterfile = new File("src/pic.jpg");
        
       

    }

    public addstorypics(String mpid) {
        chooser = new JFileChooser();
        initComponents();
        setSize(1500, 1000);
        pid=mpid;
        filterfile = new File("src/pic.jpg");
     
        
        //getpoststorys();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        captionlb = new javax.swing.JLabel();
        captiontf = new javax.swing.JTextField();
        photolb = new javax.swing.JLabel();
        choosebtn1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addbtn1 = new javax.swing.JButton();
        closebtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        showphotolb = new javax.swing.JLabel();
        kscrolpane = new javax.swing.JScrollPane();
        addedpostpanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        captionlb.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        captionlb.setText("CAPTION");
        getContentPane().add(captionlb);
        captionlb.setBounds(640, 40, 200, 40);
        getContentPane().add(captiontf);
        captiontf.setBounds(850, 40, 310, 40);

        photolb.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        photolb.setText("PHOTO");
        getContentPane().add(photolb);
        photolb.setBounds(680, 110, 120, 40);

        choosebtn1.setBackground(new java.awt.Color(123, 156, 179));
        choosebtn1.setText("CHOOSE");
        choosebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosebtn1ActionPerformed(evt);
            }
        });
        getContentPane().add(choosebtn1);
        choosebtn1.setBounds(830, 100, 250, 50);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("ADDED POSTS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 370, 290, 30);

        addbtn1.setBackground(new java.awt.Color(123, 156, 179));
        addbtn1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addbtn1.setText("ADD");
        addbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtn1ActionPerformed(evt);
            }
        });
        getContentPane().add(addbtn1);
        addbtn1.setBounds(780, 520, 150, 40);

        closebtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        closebtn.setText("close");
        getContentPane().add(closebtn);
        closebtn.setBounds(503, 893, 130, 60);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("ADD PICS");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(80, 10, 230, 50);

        showphotolb.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        getContentPane().add(showphotolb);
        showphotolb.setBounds(710, 170, 540, 330);

        addedpostpanel.setBackground(new java.awt.Color(255, 255, 255));
        addedpostpanel.setLayout(null);
        kscrolpane.setViewportView(addedpostpanel);

        getContentPane().add(kscrolpane);
        kscrolpane.setBounds(10, 460, 690, 410);

        jPanel1.setBackground(new java.awt.Color(123, 156, 179));
        jPanel1.setLayout(null);

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Walden");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(30, 320, 160, 30);

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Blur");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(30, 40, 160, 30);

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setText("Brighter");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(30, 80, 160, 30);

        jButton6.setBackground(new java.awt.Color(153, 153, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setText("Darker");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(30, 120, 160, 30);

        jButton7.setBackground(new java.awt.Color(153, 153, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setText("Grayscale");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(30, 160, 160, 30);

        jButton8.setBackground(new java.awt.Color(153, 153, 255));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton8.setText("Hefe");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(30, 200, 160, 30);

        jButton9.setBackground(new java.awt.Color(153, 153, 255));
        jButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton9.setText("Lofi");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(30, 240, 160, 30);

        jButton10.setBackground(new java.awt.Color(153, 153, 255));
        jButton10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton10.setText("Nashville");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(30, 280, 160, 30);

        jButton11.setBackground(new java.awt.Color(153, 153, 255));
        jButton11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton11.setText("No Filter");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11);
        jButton11.setBounds(30, 360, 160, 30);

        jLabel4.setBackground(new java.awt.Color(153, 153, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Apply Filters");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 14, 160, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(360, 40, 230, 410);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/srcok/dark-brown-color-solid-background-1920x1080.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1770, 1080);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtn1ActionPerformed
        try {

// TODO add your handling code here:
            System.out.println(pid);
            String caption = captiontf.getText();
            System.out.println(caption);

            if (caption.equals("") || pid.equals("")) {
                JOptionPane.showMessageDialog(this, "plz fill fields");

            } else if (x == null) {

                JOptionPane.showMessageDialog(this, "Please choose file");

            } else {
                HttpResponse<String> res = Unirest.post("http://localhost:8999/story")
                        .queryString("caption", caption)
                        .queryString("pid", pid)
                        .field("photo", x)
                        .asString();

                if (res.getStatus() == 200) {

                    if (res.getBody().contentEquals("success")) {

                        JOptionPane.showMessageDialog(this, "POST ADDED");
                       // showaddedbtn.setVisible(true);
                       getpoststorys();
                    } else {
                        JOptionPane.showMessageDialog(this, "error");
                    }
                }
                
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        //getpoststorys();


    }//GEN-LAST:event_addbtn1ActionPerformed

    private void choosebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosebtn1ActionPerformed
        int k = chooser.showOpenDialog(this);
        if (k == JFileChooser.APPROVE_OPTION) {
            x = chooser.getSelectedFile();
            setnofilter();

            

        }
    }//GEN-LAST:event_choosebtn1ActionPerformed

    public void setnofilter() {
        try {
            x = chooser.getSelectedFile();
            img = ImageIO.read(x.getAbsoluteFile());
            Image img4 = img.getScaledInstance(showphotolb.getWidth(), showphotolb.getHeight(), Image.SCALE_SMOOTH);
            showphotolb.setIcon(new ImageIcon(img4));

        } catch (Exception e) {
            e.printStackTrace();

        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    WaldenFilter obj = new WaldenFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(), showphotolb.getHeight(), Image.SCALE_SMOOTH);

                    showphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    BlurFilter obj = new BlurFilter();
                    BufferedImage blurimg = obj.filter(img);

                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }

                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(), showphotolb.getHeight(), Image.SCALE_SMOOTH);

                    showphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    BrighterFilter obj = new BrighterFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(), showphotolb.getHeight(), Image.SCALE_SMOOTH);

                    showphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    DarkerFilter obj = new DarkerFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(), showphotolb.getHeight(), Image.SCALE_SMOOTH);

                    showphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    GrayscaleFilter obj = new GrayscaleFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(), showphotolb.getHeight(), Image.SCALE_SMOOTH);

                    showphotolb.setIcon(new ImageIcon(changedimg));;

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    HefeFilter obj = new HefeFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(),showphotolb.getHeight(), Image.SCALE_SMOOTH);

                    showphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    LoFiFilter obj = new LoFiFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                        x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(),showphotolb.getHeight(), Image.SCALE_SMOOTH);

                    showphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                try {

                    NashvilleFilter obj = new NashvilleFilter();
                    BufferedImage blurimg = obj.filter(img);
                    try {
                        // File outputfile = new File("image.jpg");
                        ImageIO.write(blurimg, "jpg", filterfile);
                         x = filterfile;
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    changedimg = blurimg.getScaledInstance(showphotolb.getWidth(), showphotolb.getHeight(), Image.SCALE_SMOOTH);

                   showphotolb.setIcon(new ImageIcon(changedimg));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        setnofilter();
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addstorypics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addstorypics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addstorypics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addstorypics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addstorypics().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn1;
    private javax.swing.JPanel addedpostpanel;
    private javax.swing.JLabel captionlb;
    private javax.swing.JTextField captiontf;
    private javax.swing.JButton choosebtn1;
    private javax.swing.JButton closebtn;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane kscrolpane;
    private javax.swing.JLabel photolb;
    private javax.swing.JLabel showphotolb;
    // End of variables declaration//GEN-END:variables

    public void getpoststorys() {

        try {
            addedpostpanel.removeAll();
            HttpResponse<String> res = Unirest.get("http://localhost:8999/showadded")
                    .queryString("spid", pid)
                    .asString();
            
           // System.out.println(pid);

            if (res.getStatus() == 200) {
                String sdata = res.getBody();
                
               // System.out.println(sdata);     
                        
                StringTokenizer st3 = new StringTokenizer(sdata, "&");
                
                int y = 10;
                int mainheight = 220;
                while(st3.hasMoreTokens()){
                    String storydata = st3.nextToken();
                    
                    StringTokenizer st4 = new StringTokenizer(storydata, ";#");
                    String psid=st4.nextToken();
                    
                   // System.out.println(psid);
                    
                    String caption = st4.nextToken();
                    String photos = st4.nextToken();
                    
                    addedpostpanel app = new addedpostpanel();
                    app.setBounds(10, y, 630, 220);
                    addedpostpanel.add(app);
                    
                    URL url = new URL("http://localhost:8999/GetResource/" + photos);
                    BufferedImage bimg = ImageIO.read(url);
                    Image img = bimg.getScaledInstance(app.showaddedpostlb.getWidth(), app.showaddedpostlb.getHeight(), Image.SCALE_SMOOTH);
                    app.showaddedpostlb.setIcon(new ImageIcon(img));
                    
                    
                    app.showaddedcaptionlb.setText(caption);
                    app.deletebtn.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent ae) {
                            try {
                                HttpResponse<String> res = Unirest.get("http://localhost:8999/dell")
                                        .queryString("psid", psid)
                                        .asString();
                                if (res.getStatus() == 200) {
                                    
                                    System.out.println(res.getBody());
                                    
                                    if (res.getBody().contentEquals("success")) {

                                       
                                       getpoststorys();

                                    }else{
                                        System.out.println("fail");
                                    
                                    
                                    }
                                }
                                

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                            
                            
                        }
                    });
                            
                     y += 240;
                     mainheight += 240;
                }
                addedpostpanel.repaint();
                addedpostpanel.setPreferredSize(new Dimension(kscrolpane.getWidth(), mainheight));
            }

        } catch (Exception e) {

            e.printStackTrace();

        }

    }
}
